---
// import type { HTMLAttributes } from "astro/types";
---

<style>
  .photo-parallax-container {
    height: 150vh;
    position: relative;
  }

  .photo-parallax {
    position: sticky;
    top: 10vh;

    background-color: white;
    background-image: url("/assets/cloud-img/cover.jpg");
    background-repeat: no-repeat;
    background-position: center;
    background-size: 720px;

    height: 80vh;
    max-height: 720px;
    max-width: 720px;
    margin: 0px auto;

    overflow: hidden;

    box-sizing: content-box;
    border-radius: 10px;
    box-shadow: 0px 0px 0px 10px #b7d6e3;
  }

  .photo-parallax-sprite {
    background-image: url("/assets/cloud-img/sprite.jpg");
    background-repeat: no-repeat;
    background-position-x: center;
    background-position-y: 360;
    height: 100%;
    max-height: 720px;
    max-width: 720px;
  }
</style>
<div class="photo-parallax-container">
  <div class="photo-parallax">
    <div class="photo-parallax-sprite"></div>
  </div>
</div>

<script>
  import { animate, onScroll } from "animejs";

  const totalFrames = 77; // 55440/720

  const parallaxSprite = document.querySelector(
    ".photo-parallax-sprite",
  )! as HTMLDivElement;

  const setCurrentFrame = (percent: number) => {
    const currentFrame = Math.round((totalFrames - 1) * percent);
    const framePosition = currentFrame * 720;
    requestAnimationFrame(() => {
      parallaxSprite.style.backgroundPositionY = `-${framePosition}px`;
    });
  };

  animate(".photo-parallax", {
    ease: "linear",
    autoplay: onScroll({
      enter: "center+=1em top-=100%",
      leave: "center-=1em bottom+=100%",
      sync: 0.25,
      onUpdate: ({ prevProgress }) => {
        setCurrentFrame(prevProgress);
      },
    }),
  });
</script>
